let rpsArr = ["rock", "paper", "scissors"];
// Array holding the possible selections


let randomNum = (max) => {
  return Math.floor(Math.random() * max);
}
// Math.random generates a number between 0 and less than 1 (O is inclusive while 1 is exclusive). Then we multiply that by our max number, which we'll always set to 3. We have all that inside of our Math.floor function which will return the largest integer less than or equal to a given number. 

//  For example, Math.random could generate something like .05741. Then it gets immediately multiplied by 3 which would give us 0.17223. This number is then passed into the Math.floor function which rounds it down to the nearest integer, which is 0.


let computerPlay = () => {
  return rpsArr[randomNum(3)];
}
// This is the function that will be used to generate the computers selection of either rock, paper, or scissors. 

// In this function, we are returning an element from our array named rpsArr. To do this we use bracket notation. However, instead of us hard coding a number in the brackets, we pass the function randomNum(3)

// Notice, we're using bracket notation to access an element in our array named rpsArray. We use the randomNum function with 3 passed as the argument. This will generate 0, 1, or 2. Whichever number is generated by randomNum(3) will be the element in rpsArr that our function returns.


let playerChoice = () => {
  let input = prompt('Make your selection: Rock, Paper, or Scissors');
  input = input.toLowerCase();
  return input;
}
// This Function takes the players input via a prompt and returns it to the console. This is used as the playerSelection.


// const playerSelection = playerChoice();
// const computerSelection = computerPlay();

function playRound(playerSelection, computerSelection) {
  const playerSelection = playerChoice();
  const computerSelection = computerPlay();
  if (playerSelection === computerSelection) {
    return "It's a Tie!"
  } else if (playerSelection === "rock" && computerSelection === "scissors") {
    return "You Win! Rock beats Scissors!"
  } else if (playerSelection === "rock" && computerSelection === "paper"){
    return "You Lose! Paper beats Rock!"
  } else if (playerSelection === "paper" && computerSelection === "rock") {
    return "You Win! Paper beats Rock!"
  } else if (playerSelection === "paper" && computerSelection === "scissors") {
    return "You Lose! Scissors beats Paper!"
  } else if (playerSelection === "scissors" && computerSelection === "paper") {
    return "You Win! Scissors beats Paper!"
  } else if (playerSelection === "scissors" && computerSelection === "rock") {
    return "You Lose! Rock beats Scissors!"
  }
}
// This function plays a round of the game and returns who won and how.

const game = () => {
  for (let i = 0; i <= 5; i++) {
     return sum(1,2);
  }
}
function sum(a, b) {
  a + b;
}
console.log(game());

let playerScore = 0;
let computerScore = 0;

let incScore = whichScore => {
  whichScore++
  return whichScore;
}
// Separate function to increment either the playerScore or computerScore depending on which one is passed to the function. This will be placed inside our winChecker function.



let declareWinner = (pSelection, cSelection) => {
  if (pSelection === cSelection) {
    return "It's a Tie!"
  } else if (pSelection === "rock" && cSelection === "scissors") {
    return "You Win! Rock beats Scissors!"
  } else if (pSelection === "rock" && cSelection === "paper"){
    return "You Lose! Paper beats Rock!"
  } else if (pSelection === "paper" && cSelection === "rock") {
    return "You Win! Paper beats Rock!"
  } else if (pSelection === "paper" && cSelection === "scissors") {
    return "You Lose! Scissors beats Paper!"
  } else if (pSelection === "scissors" && cSelection === "paper") {
    return "You Win! Scissors beats Paper!"
  } else if (pSelection === "scissors" && cSelection === "rock") {
    return "You Lose! Rock beats Scissors!"
  }
}

